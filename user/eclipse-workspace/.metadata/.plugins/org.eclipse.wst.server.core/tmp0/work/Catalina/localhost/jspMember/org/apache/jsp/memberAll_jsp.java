/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-07-10 05:10:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import member.*;

public final class memberAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/bottom.jsp", Long.valueOf(1657413418508L));
    _jspx_dependants.put("/top.jsp", Long.valueOf(1657429561878L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("member");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- memberAll.jsp -->\r\n");

	String mode = request.getParameter("mode");
	if (mode==null){
		mode = "all";
	}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!-- top.jsp -->\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<title>회원관리</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div align=\"center\">\r\n");
      out.write("		<table border=\"1\" width=\"600\" height=\"500\">\r\n");
      out.write("			<tr height=\"10%\">\r\n");
      out.write("				<th><a href=\"memberSsn.jsp\">회원가입</a></th>\r\n");
      out.write("				<th><a href=\"memberAll.jsp\">회원보기</a></th>\r\n");
      out.write("				<th><a href=\"memberAll.jsp?mode=find\">회원찾기</a></th>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr height=\"80%\">\r\n");
      out.write("				<td width=\"100%\" height=\"100%\" colspan=\"3\">");
      out.write('\r');
      out.write('\n');
      member.MemberDAO mbdao = null;
      mbdao = (member.MemberDAO) _jspx_page_context.getAttribute("mbdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (mbdao == null){
        mbdao = new member.MemberDAO();
        _jspx_page_context.setAttribute("mbdao", mbdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("	<hr color=\"green\" width=\"300\">\r\n");
	if (mode.equals("all")){ 
      out.write("	\r\n");
      out.write("	<h2>회 원 목 록 보 기</h2>\r\n");
	}else { 
      out.write("\r\n");
      out.write("	<h2>회 원 찾 기</h2>\r\n");
      out.write("	<form method=\"post\">\r\n");
      out.write("		<select name=\"search\">\r\n");
      out.write("			<option value=\"id\">아이디</option>\r\n");
      out.write("			<option value=\"name\">이름</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<input type=\"text\" name=\"searchString\">\r\n");
      out.write("		<input type=\"submit\" value=\"찾기\">\r\n");
      out.write("	</form>\r\n");
	} 
      out.write("	\r\n");
      out.write("	<hr color=\"green\" width=\"300\">\r\n");
      out.write("	<table border=\"1\" width=\"100%\">\r\n");
      out.write("		<tr bgcolor=\"yellow\">\r\n");
      out.write("			<th>번호</th>\r\n");
      out.write("			<th>이름</th>\r\n");
      out.write("			<th>아이디</th>\r\n");
      out.write("			<th>이메일</th>\r\n");
      out.write("			<th>전화번호</th>\r\n");
      out.write("			<th>가입일</th>\r\n");
      out.write("			<th>수정|삭제</th>\r\n");
      out.write("		</tr>\r\n");
		//여기에 DB로부터 자료를 받아서 출력을 시켜주세요!!
	List<MemberDTO> list = mbdao.listMember();
	if (list==null || list.size()==0){
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"7\">등록된 회원이 없습니다.</td>\r\n");
      out.write("		</tr>	\r\n");
	}else {
		for(MemberDTO dto : list){
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>");
      out.print(dto.getNo());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getName());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getId());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getEmail());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getAllHp());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getJoindate());
      out.write("</td>\r\n");
      out.write("			<td><a href=\"member_update.jsp?no=");
      out.print(dto.getNo());
      out.write("\">수정</a> | \r\n");
      out.write("			<a href=\"member_delete.jsp?no=");
      out.print(dto.getNo());
      out.write("\">삭제</a></td>\r\n");
      out.write("		</tr>	\r\n");
		}
	}

      out.write("		\r\n");
      out.write("	</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- bottom.jsp -->\r\n");
      out.write("</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr height=\"10%\">\r\n");
      out.write("				<td colspan=\"3\" align=\"center\">\r\n");
      out.write("					K G 아 이 티 뱅 크 주 말 웹 프 로 젝 트 반\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
